# Название workflow
name: Deploy Hugo site to Pages

# События, которые запускают workflow
on:
  # Запуск при push в ветку master (основная ветка репозитория)
  push:
    branches:
      - master
  # Возможность запустить workflow вручную через вкладку Actions в GitHub
  workflow_dispatch:

# Установка прав доступа для GITHUB_TOKEN, чтобы разрешить развертывание на GitHub Pages
permissions:
  contents: read    # Разрешение на чтение содержимого репозитория
  pages: write      # Разрешение на запись в GitHub Pages
  id-token: write   # Разрешение на использование токена для аутентификации

# Настройка concurrency (параллелизма)
concurrency:
  group: "pages"          # Группировка всех развертываний под одним именем "pages"
  cancel-in-progress: false  # Не отменять уже запущенные процессы, чтобы завершить текущие развертывания

# Установка оболочки по умолчанию для всех команд run
defaults:
  run:
    shell: bash  # Все команды будут выполняться в bash

# Определение задач (jobs)
jobs:
  # Задача сборки сайта
  build:
    runs-on: ubuntu-latest  # Запуск на последней версии Ubuntu
    env:
      HUGO_VERSION: 0.141.0  # Указание версии Hugo для использования
    steps:
      - name: Install Hugo CLI
        # Установка Hugo CLI с указанной версией (extended-версия для поддержки Sass/SCSS)
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass
        # Установка Dart Sass для обработки Sass/SCSS файлов в Hugo
        run: sudo snap install dart-sass
      - name: Checkout
        # Получение кода из репозитория, включая подмодули и полную историю коммитов
        uses: actions/checkout@v4
        with:
          submodules: recursive  # Загрузка всех подмодулей (например, тем)
          fetch-depth: 0         # Получение полной истории (нужно для некоторых функций Hugo)
      - name: Setup Pages
        # Настройка GitHub Pages и получение base_url для сайта
        id: pages
        uses: actions/configure-pages@v5
      - name: Install Node.js dependencies
        # Установка зависимостей Node.js, если в репозитории есть package-lock.json или npm-shrinkwrap.json
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: Build with Hugo
        # Указание переменных окружения для сборки сайта
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache  # Папка для кэширования данных Hugo
          HUGO_ENVIRONMENT: production                  # Указание окружения production
          TZ: America/Los_Angeles                       # Установка часового пояса
        # Команда сборки сайта с минификацией и использованием base_url от GitHub Pages
        run: |
          hugo \
            --gc \              # Очистка неиспользуемых файлов из кэша
            --minify \          # Минификация HTML, CSS и JS
            --baseURL "${{ steps.pages.outputs.base_url }}/"  # Установка базового URL для сайта
      - name: Upload artifact
        # Загрузка собранного сайта (папка ./public) как артефакта для передачи в задачу deploy
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public  # Путь к папке с собранным сайтом

  # Задача развертывания сайта
  deploy:
    # Указание окружения для развертывания
    environment:
      name: github-pages  # Имя окружения
      url: ${{ steps.deployment.outputs.page_url }}  # URL опубликованного сайта
    runs-on: ubuntu-latest  # Запуск на последней версии Ubuntu
    needs: build  # Зависимость от успешного завершения задачи build
    steps:
      - name: Deploy to GitHub Pages
        # Развертывание артефакта (собранного сайта) на GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
